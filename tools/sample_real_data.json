{
  "repository": {
    "id": 510889311,
    "node_id": "R_kgDOHnONXw",
    "name": "azure-dev",
    "full_name": "Azure/azure-dev",
    "private": false,
    "owner": {
      "login": "Azure",
      "id": 6844498,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjY4NDQ0OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6844498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Azure",
      "html_url": "https://github.com/Azure",
      "followers_url": "https://api.github.com/users/Azure/followers",
      "following_url": "https://api.github.com/users/Azure/following{/other_user}",
      "gists_url": "https://api.github.com/users/Azure/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Azure/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Azure/subscriptions",
      "organizations_url": "https://api.github.com/users/Azure/orgs",
      "repos_url": "https://api.github.com/users/Azure/repos",
      "events_url": "https://api.github.com/users/Azure/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Azure/received_events",
      "type": "Organization",
      "user_view_type": "public",
      "site_admin": false
    },
    "html_url": "https://github.com/Azure/azure-dev",
    "description": "A developer CLI that reduces the time it takes to get started on Azure. The Azure Developer CLI (azd) provides commands that map to key workflow stages: code, build, deploy, monitor, repeat.",
    "fork": false,
    "url": "https://api.github.com/repos/Azure/azure-dev",
    "forks_url": "https://api.github.com/repos/Azure/azure-dev/forks",
    "keys_url": "https://api.github.com/repos/Azure/azure-dev/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Azure/azure-dev/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Azure/azure-dev/teams",
    "hooks_url": "https://api.github.com/repos/Azure/azure-dev/hooks",
    "issue_events_url": "https://api.github.com/repos/Azure/azure-dev/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Azure/azure-dev/events",
    "assignees_url": "https://api.github.com/repos/Azure/azure-dev/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Azure/azure-dev/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Azure/azure-dev/tags",
    "blobs_url": "https://api.github.com/repos/Azure/azure-dev/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Azure/azure-dev/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Azure/azure-dev/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Azure/azure-dev/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Azure/azure-dev/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Azure/azure-dev/languages",
    "stargazers_url": "https://api.github.com/repos/Azure/azure-dev/stargazers",
    "contributors_url": "https://api.github.com/repos/Azure/azure-dev/contributors",
    "subscribers_url": "https://api.github.com/repos/Azure/azure-dev/subscribers",
    "subscription_url": "https://api.github.com/repos/Azure/azure-dev/subscription",
    "commits_url": "https://api.github.com/repos/Azure/azure-dev/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Azure/azure-dev/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Azure/azure-dev/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Azure/azure-dev/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Azure/azure-dev/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Azure/azure-dev/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Azure/azure-dev/merges",
    "archive_url": "https://api.github.com/repos/Azure/azure-dev/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Azure/azure-dev/downloads",
    "issues_url": "https://api.github.com/repos/Azure/azure-dev/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Azure/azure-dev/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Azure/azure-dev/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Azure/azure-dev/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Azure/azure-dev/labels{/name}",
    "releases_url": "https://api.github.com/repos/Azure/azure-dev/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Azure/azure-dev/deployments",
    "created_at": "2022-07-05T20:47:01Z",
    "updated_at": "2025-07-19T00:35:01Z",
    "pushed_at": "2025-07-17T22:15:25Z",
    "git_url": "git://github.com/Azure/azure-dev.git",
    "ssh_url": "git@github.com:Azure/azure-dev.git",
    "clone_url": "https://github.com/Azure/azure-dev.git",
    "svn_url": "https://github.com/Azure/azure-dev",
    "homepage": "https://aka.ms/azd",
    "size": 148015,
    "stargazers_count": 466,
    "watchers_count": 466,
    "language": "Go",
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "has_discussions": true,
    "forks_count": 234,
    "mirror_url": null,
    "archived": false,
    "disabled": false,
    "open_issues_count": 839,
    "license": {
      "key": "mit",
      "name": "MIT License",
      "spdx_id": "MIT",
      "url": "https://api.github.com/licenses/mit",
      "node_id": "MDc6TGljZW5zZTEz"
    },
    "allow_forking": true,
    "is_template": false,
    "web_commit_signoff_required": false,
    "topics": [
      "agents",
      "ai",
      "azure",
      "cli",
      "deployments",
      "microsoft"
    ],
    "visibility": "public",
    "forks": 234,
    "open_issues": 839,
    "watchers": 466,
    "default_branch": "main",
    "permissions": {
      "admin": true,
      "maintain": true,
      "push": true,
      "triage": true,
      "pull": true
    },
    "custom_properties": {
      "activeRepoStatus": "true",
      "currentRepoStatus": "true",
      "durableOwnershipDisable": "false",
      "durableOwnershipNextCheckDate": "2024-04-11T23:01:13.568Z",
      "durableOwnershipWarn": "false",
      "global-rulesets-opt-out": "false"
    },
    "organization": {
      "login": "Azure",
      "id": 6844498,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjY4NDQ0OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6844498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Azure",
      "html_url": "https://github.com/Azure",
      "followers_url": "https://api.github.com/users/Azure/followers",
      "following_url": "https://api.github.com/users/Azure/following{/other_user}",
      "gists_url": "https://api.github.com/users/Azure/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Azure/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Azure/subscriptions",
      "organizations_url": "https://api.github.com/users/Azure/orgs",
      "repos_url": "https://api.github.com/users/Azure/repos",
      "events_url": "https://api.github.com/users/Azure/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Azure/received_events",
      "type": "Organization",
      "user_view_type": "public",
      "site_admin": false
    },
    "network_count": 234,
    "subscribers_count": 248
  },
  "sample_issues": [
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5508",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5508/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5508/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5508/events",
      "html_url": "https://github.com/Azure/azure-dev/pull/5508",
      "id": 3247650549,
      "node_id": "PR_kwDOHnONX86fzTjF",
      "number": 5508,
      "title": "[DISCUSS] feat/template versioning",
      "user": {
        "login": "anfibiacreativa",
        "id": 4014025,
        "node_id": "MDQ6VXNlcjQwMTQwMjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4014025?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/anfibiacreativa",
        "html_url": "https://github.com/anfibiacreativa",
        "followers_url": "https://api.github.com/users/anfibiacreativa/followers",
        "following_url": "https://api.github.com/users/anfibiacreativa/following{/other_user}",
        "gists_url": "https://api.github.com/users/anfibiacreativa/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/anfibiacreativa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/anfibiacreativa/subscriptions",
        "organizations_url": "https://api.github.com/users/anfibiacreativa/orgs",
        "repos_url": "https://api.github.com/users/anfibiacreativa/repos",
        "events_url": "https://api.github.com/users/anfibiacreativa/events{/privacy}",
        "received_events_url": "https://api.github.com/users/anfibiacreativa/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "anfibiacreativa",
        "id": 4014025,
        "node_id": "MDQ6VXNlcjQwMTQwMjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4014025?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/anfibiacreativa",
        "html_url": "https://github.com/anfibiacreativa",
        "followers_url": "https://api.github.com/users/anfibiacreativa/followers",
        "following_url": "https://api.github.com/users/anfibiacreativa/following{/other_user}",
        "gists_url": "https://api.github.com/users/anfibiacreativa/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/anfibiacreativa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/anfibiacreativa/subscriptions",
        "organizations_url": "https://api.github.com/users/anfibiacreativa/orgs",
        "repos_url": "https://api.github.com/users/anfibiacreativa/repos",
        "events_url": "https://api.github.com/users/anfibiacreativa/events{/privacy}",
        "received_events_url": "https://api.github.com/users/anfibiacreativa/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "anfibiacreativa",
          "id": 4014025,
          "node_id": "MDQ6VXNlcjQwMTQwMjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4014025?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/anfibiacreativa",
          "html_url": "https://github.com/anfibiacreativa",
          "followers_url": "https://api.github.com/users/anfibiacreativa/followers",
          "following_url": "https://api.github.com/users/anfibiacreativa/following{/other_user}",
          "gists_url": "https://api.github.com/users/anfibiacreativa/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/anfibiacreativa/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/anfibiacreativa/subscriptions",
          "organizations_url": "https://api.github.com/users/anfibiacreativa/orgs",
          "repos_url": "https://api.github.com/users/anfibiacreativa/repos",
          "events_url": "https://api.github.com/users/anfibiacreativa/events{/privacy}",
          "received_events_url": "https://api.github.com/users/anfibiacreativa/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2025-07-21T08:11:37Z",
      "updated_at": "2025-07-21T08:12:41Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": true,
      "pull_request": {
        "url": "https://api.github.com/repos/Azure/azure-dev/pulls/5508",
        "html_url": "https://github.com/Azure/azure-dev/pull/5508",
        "diff_url": "https://github.com/Azure/azure-dev/pull/5508.diff",
        "patch_url": "https://github.com/Azure/azure-dev/pull/5508.patch",
        "merged_at": null
      },
      "body": "# Template Version Management for Azure Developer CLI\r\n\r\n## Overview\r\nThis package implements the CalVer (Calendar Versioning) functionality for Azure Developer CLI templates. It automatically creates and manages version files within templated projects, enabling better tracking, debugging, and reproducibility of templates.\r\n\r\n## Why Template Versioning?\r\n\r\n### Problem Statement\r\nWhen users initialize projects from templates, there's no built-in mechanism to track which version of the template was used. This makes it challenging to:\r\n- Debug issues that might be template-version specific\r\n- Ensure consistent environments across team members\r\n- Understand when a project's template source was last updated\r\n- Reference the exact template state for reproducibility\r\n\r\n### Solution\r\nThe Template Version Manager introduces a standardized approach to version tracking by:\r\n1. Creating an `AZD_TEMPLATE_VERSION` file in the project directory\r\n2. Using a CalVer format: `YYYY-MM-DD-<short-git-hash>`\r\n3. Setting the file as read-only to prevent accidental modification\r\n4. Adding the version information to `azure.yaml` for easier programmatic access\r\n\r\n## How It Works\r\n\r\n### Version Format\r\n- **Date Component**: `YYYY-MM-DD` - The date when the template was initialized\r\n- **Git Hash Component**: Short git commit hash from the template source\r\n- **Example**: `2025-07-21-713980be`\r\n\r\n### Implementation Details\r\nThe version management is implemented as middleware in the CLI command pipeline. When any template-dependent command runs (like `azd init`, `azd up`, `azd deploy`, etc.), the middleware:\r\n\r\n1. Checks if the `AZD_TEMPLATE_VERSION` file exists\r\n2. If not found, creates it with the current date and git hash\r\n3. Makes the file read-only (permissions: 0444)\r\n4. Updates `azure.yaml` with a `tracking_id` field containing the version\r\n5. Prompts the user to commit the file to their repository\r\n\r\nThe middleware is designed to be non-invasive and only creates the version file once. Subsequent commands will use the existing version file if present.\r\n\r\n## Package Components\r\n\r\n### Key Files\r\n- `template_version.go` - Core implementation of version manager functionality\r\n- `template_version_test.go` - Unit tests for version management\r\n- `registration.go` - IoC container registration for version manager\r\n\r\n### Key Types\r\n- `Manager` - Main service that handles version file operations\r\n- `VersionInfo` - Struct representing parsed version information\r\n\r\n### Key Functions\r\n- `EnsureTemplateVersion` - Main function that checks/creates version files\r\n- `CreateVersionFile` - Creates the version file with proper format and permissions\r\n- `ReadVersionFile` - Reads and validates existing version files\r\n- `GetShortCommitHash` - Retrieves the git hash for version creation\r\n- `ParseVersionString` - Parses a version string into structured data\r\n\r\n## Testing It Yourself\r\n\r\n### Prerequisites\r\n- Go development environment\r\n- Azure Developer CLI source code\r\n- Git installed\r\n\r\n### How to Test\r\n\r\n1. **Build the CLI with template versioning**:\r\n   ```bash\r\n   cd /path/to/azure-dev\r\n   go build -o ./cli/azd/azd ./cli/azd\r\n   ```\r\n\r\n2. **Initialize a new project from a template**:\r\n   ```bash\r\n   mkdir -p test-app\r\n   cd test-app\r\n   /path/to/azure-dev/cli/azd/azd init --template azure-samples/todo-nodejs-mongo-aca\r\n   ```\r\n\r\n3. **Run a template-related command to trigger the middleware**:\r\n   ```bash\r\n   /path/to/azure-dev/cli/azd/azd env list --debug\r\n   ```\r\n\r\n4. **Verify the version file was created**:\r\n   ```bash\r\n   cat AZD_TEMPLATE_VERSION\r\n   ```\r\n   You should see output like: `2025-07-21-713980be`\r\n\r\n5. **Check azure.yaml for tracking_id**:\r\n   ```bash\r\n   grep tracking_id azure.yaml\r\n   ```\r\n   It should show: `tracking_id: 2025-07-21-713980be`\r\n\r\n### Debugging\r\nFor verbose output, run commands with debug logging:\r\n```bash\r\nAZURE_DEV_TRACE_LEVEL=DEBUG /path/to/azure-dev/cli/azd/azd env list --debug\r\n```\r\n\r\n## Code Example: Using the Template Version Manager\r\n\r\n```go\r\n// Create a new manager\r\nmanager := templateversion.NewManager(console, runner)\r\n\r\n// Ensure a template version file exists (creates if missing)\r\nversion, err := manager.EnsureTemplateVersion(ctx, projectPath)\r\nif err != nil {\r\n    // Handle error\r\n}\r\n\r\n// Parse version information\r\nversionInfo, err := templateversion.ParseVersionString(version)\r\nif err != nil {\r\n    // Handle error\r\n}\r\n\r\n// Access version components\r\ndate := versionInfo.Date           // \"2025-07-21\"\r\nhash := versionInfo.CommitHash     // \"713980be\"\r\nfullVersion := versionInfo.FullVersion // \"2025-07-21-713980be\"\r\n```\r\n\r\n## Benefits for the Team\r\n\r\n1. **Enhanced Debugging**: When issues arise, the exact template version provides crucial context\r\n2. **Template Evolution**: Track how templates evolve over time and when projects were last updated\r\n3. **Reproducibility**: New team members can easily understand which template version a project is using\r\n4. **Auditing**: Simplifies compliance by tracking template sources\r\n5. **Compatibility**: Helps identify potential issues when updating templates or the CLI itself\r\n\r\n## Future Enhancements\r\n- Add template update detection to notify users when newer template versions are available\r\n- Provide commands to explicitly update templates to newer versions\r\n- Enhance version parsing to handle more complex template hierarchies\r\n\r\n## Feedback and Contributions\r\nPlease provide feedback and suggestions for improving the template version management system. The current implementation is designed to be lightweight and unobtrusive while providing valuable metadata for project maintenance.\r\n\r\ncc @spboyer @kristenwomack ",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5508/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5508/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    },
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5507",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5507/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5507/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5507/events",
      "html_url": "https://github.com/Azure/azure-dev/issues/5507",
      "id": 3246550864,
      "node_id": "I_kwDOHnONX87Bgm9Q",
      "number": 5507,
      "title": "Broken .NET Aspire Azure CI/CD pipeline: error unmarshalling Bicep template parameters",
      "user": {
        "login": "Dayonel",
        "id": 10290812,
        "node_id": "MDQ6VXNlcjEwMjkwODEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/10290812?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Dayonel",
        "html_url": "https://github.com/Dayonel",
        "followers_url": "https://api.github.com/users/Dayonel/followers",
        "following_url": "https://api.github.com/users/Dayonel/following{/other_user}",
        "gists_url": "https://api.github.com/users/Dayonel/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Dayonel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Dayonel/subscriptions",
        "organizations_url": "https://api.github.com/users/Dayonel/orgs",
        "repos_url": "https://api.github.com/users/Dayonel/repos",
        "events_url": "https://api.github.com/users/Dayonel/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Dayonel/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [
        {
          "id": 4310638069,
          "node_id": "LA_kwDOHnONX88AAAABAO8d9Q",
          "url": "https://api.github.com/repos/Azure/azure-dev/labels/question",
          "name": "question",
          "color": "f9d0c4",
          "default": true,
          "description": ""
        },
        {
          "id": 4616426399,
          "node_id": "LA_kwDOHnONX88AAAABEykTnw",
          "url": "https://api.github.com/repos/Azure/azure-dev/labels/customer-reported",
          "name": "customer-reported",
          "color": "5319e7",
          "default": false,
          "description": "identify a customer issue"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2025-07-20T17:57:57Z",
      "updated_at": "2025-07-20T20:32:20Z",
      "closed_at": null,
      "author_association": "NONE",
      "type": null,
      "active_lock_reason": null,
      "sub_issues_summary": {
        "total": 0,
        "completed": 0,
        "percent_completed": 0
      },
      "body": "- [x] Make sure you've installed the latest version using [instructions](https://github.com/Azure/azure-dev?tab=readme-ov-file#installupgrade-azure-developer-cli)\n\n**Output from `azd version`**\nRun `azd version` and copy and paste the output here:\n\nazd version 1.18.0 (commit 2c3bc5a3f885fed2e009195f466503f2fe2c22a1)\n\n**Describe the bug**\n\nI encountered this issue after upgrading my .NET Aspire project to 9.3.1 in the ci/cd pipeline (Azure DevOps):\n\n`ERROR: initializing provisioning manager: resolving bicep parameters file: error unmarshalling Bicep template parameters: invalid character 'a' after object key:value pair`\n\nUnfortunately I tried many things but can't pass this issue.\n\nLast working pipeline used `AZD_INITIAL_ENVIRONMENT_CONFIG` that now is deprecated.\nLocally `azd provision` and `azd deploy` works.\n\n**To Reproduce**\nUpgrade an Aspire project from 9.1.0 to 9.3.0.\nCreate a CI/CD pipeline using this command `azd pipeline config --provider azdo`\nHave this `main.parameters.json`:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"parameters\": {\n      \"principalId\": {\n        \"value\": \"${AZURE_PRINCIPAL_ID}\"\n      },\n      \"Authorities_AzureAd\": {\n        \"value\": \"${AZURE_AUTHORITIES_AZURE_AD}\"\n      },\n      \"Authorities_EntraExternalId\": {\n        \"value\": \"${AZURE_AUTHORITIES_ENTRA_EXTERNAL_ID}\"\n      },\n      \"AzureAd_ClientId\": {\n        \"value\": \"${AZURE_AZURE_AD_CLIENT_ID}\"\n      },\n      \"AzureAd_Instance\": {\n        \"value\": \"${AZURE_AZURE_AD_INSTANCE}\"\n      },\n      \"AzureAd_RedirectUri\": {\n        \"value\": \"${AZURE_AZURE_AD_REDIRECT_URI}\"\n      },\n      \"AzureAd_TenantId\": {\n        \"value\": \"${AZURE_AZURE_AD_TENANT_ID}\"\n      },\n      \"AzureAd_TokenValidationParameters_ValidAudiences\": {\n        \"value\": \"${AZURE_AZURE_AD_TOKEN_VALIDATION_PARAMETERS_VALID_AUDIENCES}\"\n      },\n      \"AzureAd_TokenValidationParameters_ValidIssuers\": {\n        \"value\": \"${AZURE_AZURE_AD_TOKEN_VALIDATION_PARAMETERS_VALID_ISSUERS}\"\n      },\n      \"AzureAd_TokenValidationParameters_ValidateAudience\": {\n        \"value\": \"${AZURE_AZURE_AD_TOKEN_VALIDATION_PARAMETERS_VALIDATE_AUDIENCE}\"\n      },\n      \"AzureAd_TokenValidationParameters_ValidateIssuer\": {\n        \"value\": \"${AZURE_AZURE_AD_TOKEN_VALIDATION_PARAMETERS_VALIDATE_ISSUER}\"\n      },\n      \"CRMIntegration_ApplicationId\": {\n        \"value\": \"${AZURE_CRMINTEGRATION_APPLICATION_ID}\"\n      },\n      \"CRMIntegration_ApplicationSecret\": {\n        \"value\": \"${AZURE_CRMINTEGRATION_APPLICATION_SECRET}\"\n      },\n      \"CRMIntegration_Tenant\": {\n        \"value\": \"${AZURE_CRMINTEGRATION_TENANT}\"\n      },\n      \"EntraExternalId_ClientId\": {\n        \"value\": \"${AZURE_ENTRA_EXTERNAL_ID_CLIENT_ID}\"\n      },\n      \"EntraExternalId_Instance\": {\n        \"value\": \"${AZURE_ENTRA_EXTERNAL_ID_INSTANCE}\"\n      },\n      \"EntraExternalId_RedirectUri\": {\n        \"value\": \"${AZURE_ENTRA_EXTERNAL_ID_REDIRECT_URI}\"\n      },\n      \"EntraExternalId_TenantId\": {\n        \"value\": \"${AZURE_ENTRA_EXTERNAL_ID_TENANT_ID}\"\n      },\n      \"EntraExternalId_TokenValidationParameters_ValidAudiences\": {\n        \"value\": \"${AZURE_ENTRA_EXTERNAL_ID_TOKEN_VALIDATION_PARAMETERS_VALID_AUDIENCES}\"\n      },\n      \"EntraExternalId_TokenValidationParameters_ValidIssuers\": {\n        \"value\": \"${AZURE_ENTRA_EXTERNAL_ID_TOKEN_VALIDATION_PARAMETERS_VALID_ISSUERS}\"\n      },\n      \"EntraExternalId_TokenValidationParameters_ValidateAudience\": {\n        \"value\": \"${AZURE_ENTRA_EXTERNAL_ID_TOKEN_VALIDATION_PARAMETERS_VALIDATE_AUDIENCE}\"\n      },\n      \"EntraExternalId_TokenValidationParameters_ValidateIssuer\": {\n        \"value\": \"${AZURE_ENTRA_EXTERNAL_ID_TOKEN_VALIDATION_PARAMETERS_VALIDATE_ISSUER}\"\n      },\n      \"GRAPHIntegration_ApplicationId\": {\n        \"value\": \"${AZURE_GRAPHINTEGRATION_APPLICATION_ID}\"\n      },\n      \"GRAPHIntegration_ApplicationSecret\": {\n        \"value\": \"${AZURE_GRAPHINTEGRATION_APPLICATION_SECRET}\"\n      },\n      \"GRAPHIntegration_TenantId\": {\n        \"value\": \"${AZURE_GRAPHINTEGRATION_TENANT_ID}\"\n      },\n      \"exchange_postgres_password\": {\n        \"value\": \"${AZURE_EXCHANGE_POSTGRES_PASSWORD}\"\n      },\n      \"exchange_postgres_username\": {\n        \"value\": \"${AZURE_EXCHANGE_POSTGRES_USERNAME}\"\n      },\n      \"orleans_cluster_id\": {\n        \"value\": \"${AZURE_ORLEANS_CLUSTER_ID}\"\n      },\n      \"orleans_service_id\": {\n        \"value\": \"${AZURE_ORLEANS_SERVICE_ID}\"\n      },\n      \"stap_postgres_password\": {\n        \"value\": \"${AZURE_STAP_POSTGRES_PASSWORD}\"\n      },\n      \"stap_postgres_username\": {\n        \"value\": \"${AZURE_STAP_POSTGRES_USERNAME}\"\n      },\n      \"environmentName\": {\n        \"value\": \"${AZURE_ENV_NAME}\"\n      },\n      \"location\": {\n        \"value\": \"${AZURE_LOCATION}\"\n      }\n    }\n  }\n  ```\nHave this `main.bicep` file:\n```\ntargetScope = 'subscription'\n\n@minLength(1)\n@maxLength(64)\n@description('Name of the environment that can be used as part of naming resource convention, the name of the resource group for your application will use this name, prefixed with rg-')\nparam environmentName string\n\n@minLength(1)\n@description('The location used for all deployed resources')\nparam location string\n\n@description('Id of the user or app to assign application roles')\nparam principalId string = ''\n\nparam Authorities_AzureAd string\nparam Authorities_EntraExternalId string\nparam AzureAd_ClientId string\nparam AzureAd_Instance string\nparam AzureAd_RedirectUri string\nparam AzureAd_TenantId string\nparam AzureAd_TokenValidationParameters_ValidAudiences string\nparam AzureAd_TokenValidationParameters_ValidIssuers string\nparam AzureAd_TokenValidationParameters_ValidateAudience string\nparam AzureAd_TokenValidationParameters_ValidateIssuer string\nparam CRMIntegration_ApplicationId string\n@secure()\nparam CRMIntegration_ApplicationSecret string\nparam CRMIntegration_Tenant string\nparam EntraExternalId_ClientId string\nparam EntraExternalId_Instance string\nparam EntraExternalId_RedirectUri string\nparam EntraExternalId_TenantId string\nparam EntraExternalId_TokenValidationParameters_ValidAudiences string\nparam EntraExternalId_TokenValidationParameters_ValidIssuers string\nparam EntraExternalId_TokenValidationParameters_ValidateAudience string\nparam EntraExternalId_TokenValidationParameters_ValidateIssuer string\nparam GRAPHIntegration_ApplicationId string\n@secure()\nparam GRAPHIntegration_ApplicationSecret string\nparam GRAPHIntegration_TenantId string\n@metadata({azd: {\n  type: 'generate'\n  config: {length:22}\n  }\n})\n@secure()\nparam exchange_postgres_password string\n@metadata({azd: {\n  type: 'generate'\n  config: {length:10,noNumeric:true,noSpecial:true}\n  }\n})\nparam exchange_postgres_username string\n@metadata({azd: {\n  type: 'generate'\n  config: {length:25,noUpper:true,noSpecial:true}\n  }\n})\nparam orleans_cluster_id string\n@metadata({azd: {\n  type: 'generate'\n  config: {length:25,noUpper:true,noSpecial:true}\n  }\n})\nparam orleans_service_id string\n@metadata({azd: {\n  type: 'generate'\n  config: {length:22}\n  }\n})\n@secure()\nparam stap_postgres_password string\n@metadata({azd: {\n  type: 'generate'\n  config: {length:10,noNumeric:true,noSpecial:true}\n  }\n})\nparam stap_postgres_username string\n\nvar tags = {\n  'azd-env-name': environmentName\n}\n\nresource rg 'Microsoft.Resources/resourceGroups@2022-09-01' = {\n  name: 'rg-${environmentName}'\n  location: location\n  tags: tags\n}\nmodule resources 'resources.bicep' = {\n  scope: rg\n  name: 'resources'\n  params: {\n    location: location\n    tags: tags\n    principalId: principalId\n  }\n}\n\nmodule exchange_postgres 'exchange-postgres/exchange-postgres.module.bicep' = {\n  name: 'exchange-postgres'\n  scope: rg\n  params: {\n    administratorLogin: exchange_postgres_username\n    administratorLoginPassword: exchange_postgres_password\n    keyVaultName: resources.outputs.SERVICE_BINDING_KVD9BB39FC_NAME\n    location: location\n  }\n}\nmodule redis 'redis/redis.module.bicep' = {\n  name: 'redis'\n  scope: rg\n  params: {\n    keyVaultName: resources.outputs.SERVICE_BINDING_KVB6088994_NAME\n    location: location\n  }\n}\nmodule stap_postgres 'stap-postgres/stap-postgres.module.bicep' = {\n  name: 'stap-postgres'\n  scope: rg\n  params: {\n    administratorLogin: stap_postgres_username\n    administratorLoginPassword: stap_postgres_password\n    keyVaultName: resources.outputs.SERVICE_BINDING_KVD959CDED_NAME\n    location: location\n  }\n}\n\noutput MANAGED_IDENTITY_CLIENT_ID string = resources.outputs.MANAGED_IDENTITY_CLIENT_ID\noutput MANAGED_IDENTITY_NAME string = resources.outputs.MANAGED_IDENTITY_NAME\noutput AZURE_LOG_ANALYTICS_WORKSPACE_NAME string = resources.outputs.AZURE_LOG_ANALYTICS_WORKSPACE_NAME\noutput AZURE_CONTAINER_REGISTRY_ENDPOINT string = resources.outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT\noutput AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID string = resources.outputs.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID\noutput AZURE_CONTAINER_REGISTRY_NAME string = resources.outputs.AZURE_CONTAINER_REGISTRY_NAME\noutput AZURE_CONTAINER_APPS_ENVIRONMENT_NAME string = resources.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_NAME\noutput AZURE_CONTAINER_APPS_ENVIRONMENT_ID string = resources.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID\noutput AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN string = resources.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN\noutput SERVICE_BINDING_KVB6088994_ENDPOINT string = resources.outputs.SERVICE_BINDING_KVB6088994_ENDPOINT\noutput SERVICE_BINDING_KVB6088994_NAME string = resources.outputs.SERVICE_BINDING_KVB6088994_NAME\noutput SERVICE_BINDING_KVD959CDED_ENDPOINT string = resources.outputs.SERVICE_BINDING_KVD959CDED_ENDPOINT\noutput SERVICE_BINDING_KVD959CDED_NAME string = resources.outputs.SERVICE_BINDING_KVD959CDED_NAME\noutput SERVICE_BINDING_KVD9BB39FC_ENDPOINT string = resources.outputs.SERVICE_BINDING_KVD9BB39FC_ENDPOINT\noutput SERVICE_BINDING_KVD9BB39FC_NAME string = resources.outputs.SERVICE_BINDING_KVD9BB39FC_NAME\noutput STATIC_PUBLIC_IP string = resources.outputs.publicIpAddress\n```\n\nHave this `azure-dev.yml` file in folder `.azdo/pipelines`:\n\n```\n# Run when commits are pushed to development\ntrigger:\n  - development\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n  # install dotnet\n  - task: UseDotNet@2\n    displayName: 'Use .NET SDK 9'\n    inputs:\n      version: 9.x\n\n  # install azd\n  - task: setup-azd@1\n    displayName: Install azd\n  \n  # azd delegate auth to az to use service connection with AzureCLI@2\n  - pwsh: |\n      azd config set auth.useAzCliAuth \"true\"\n    displayName: Configure AZD to Use AZ CLI Authentication.\n\n  - task: AzureCLI@2\n    displayName: Provision Infrastructure\n    inputs:\n      azureSubscription: azconnection\n      scriptType: bash\n      scriptLocation: inlineScript\n      keepAzSessionActive: true\n      workingDirectory: 'Project.AppHost'\n      inlineScript: |\n        azd provision --no-prompt\n    env:\n      AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)\n      AZURE_ENV_NAME: $(AZURE_ENV_NAME)\n      AZURE_LOCATION: $(AZURE_LOCATION)\n      # Deprecated: AZD_INITIAL_ENVIRONMENT_CONFIG: $(AZD_INITIAL_ENVIRONMENT_CONFIG)\n      # https://github.com/Azure/azure-dev/pull/5143\n      # https://learn.microsoft.com/en-us/dotnet/aspire/whats-new/dotnet-aspire-9.3#-azd-major-improvements-to-cicd-for-aspire-apps\n\n  # Copy files to ArtifactStagingDirectory\n  - task: CopyFiles@2\n    displayName: Copy files to staging directory\n    inputs:\n      Contents: '**/*'  # All files in the directory\n      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n\n  # List the files in the staging directory\n  - task: Bash@3\n    displayName: List files in staging directory\n    inputs:\n      targetType: 'inline'\n      script: |\n        ls -R $(Build.ArtifactStagingDirectory)\n\n    # Publish the artifact\n  - task: PublishPipelineArtifact@1\n    displayName: Publish artifact\n    inputs:\n      targetPath: '$(Build.ArtifactStagingDirectory)'\n      artifactName: 'app'  # Name of the artifact\n      publishLocation: 'pipeline'\n```\n\n**Expected behavior**\nApplication should provision in Azure.\n\n**Environment**\nInformation on your environment:\n    * Language name and version: **US English**\n    * IDE and version : **Visual Studio Version 17.14.7**\n\n**Additional context**\nNow many variables appeared in the CI pipeline, which is a good thing, and an improvement over `AZD_INITIAL_ENVIRONMENT_CONFIG`.\n\nI tried logging env variables in `azure-dev.yml` with this step:\n```\n  - pwsh: |\n      Write-Host \"Printing all relevant AZURE_ environment variables:\"\n      Get-ChildItem Env:AZURE_* | ForEach-Object { Write-Host \"$($_.Name) = $($_.Value)\" }\n    displayName: TEMPORARY Print AZURE_* **variables**\n```\n\nAll variables are logged, they do exist.\n\nFinally a glimse of how `config.json` looks like in `.azure` > env-dev with random GUID(s) as an example:\n```\n{\n\t\"infra\": {\n\t\t\"parameters\": {\n\t\t\t\"AzureAd_ClientId\": \"74ddfc09-62db-4baa-9ada-778348be647c\",\n\t\t\t\"AzureAd_TokenValidationParameters_ValidAudiences\": \"[\\\"api://e935a748-8b59-4c26-a59c-9bcc83f5ab57\\\"]\",\n\t\t\t\"AzureAd_TokenValidationParameters_ValidIssuers\": \"[\\\"https://sts.windows.net/d9a98bfa-f335-4237-bb47-4b2e5deba383/\\\"]\",\n\t\t\t\"AzureAd_TokenValidationParameters_ValidateAudience\": \"true\",\n\t\t\t\"AzureAd_TokenValidationParameters_ValidateIssuer\": \"true\"\n\t\t}\n\t},\n\t\"vault\": \"472b923f-2a6e-4132-ac06-6f6d36895629\"\n}\n```\n\nAnd this is how some of the variables looks like in Azure DevOps pipeline:\n`AZURE_AZURE_AD_CLIENT_ID`\n`74ddfc09-62db-4baa-9ada-778348be647c`\n\n`AZURE_AZURE_AD_TOKEN_VALIDATION_PARAMETERS_VALID_AUDIENCES`\n`[\"api://e935a748-8b59-4c26-a59c-9bcc83f5ab57\"]`\n\nAnd last there's this auto-generated file with suspicious configuration that I'm not sure works:\n`project-portal.tmpl.yaml`\n```\n- name: services__project__http__0\n  value: http://project-frontend.{{ .Env.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN }}\n- name: services__project__https__0\n  value: https://project-frontend.{{ .Env.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN }}\n```\n\nPlease if anybody has a solution for this, any help or clue is greatly appreciated!!",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5507/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5507/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    },
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5506",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5506/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5506/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5506/events",
      "html_url": "https://github.com/Azure/azure-dev/issues/5506",
      "id": 3244349114,
      "node_id": "I_kwDOHnONX87BYNa6",
      "number": 5506,
      "title": "[Issue] Problem deploying a simple static HTML app to SWA using azd",
      "user": {
        "login": "davrous",
        "id": 933018,
        "node_id": "MDQ6VXNlcjkzMzAxOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/933018?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davrous",
        "html_url": "https://github.com/davrous",
        "followers_url": "https://api.github.com/users/davrous/followers",
        "following_url": "https://api.github.com/users/davrous/following{/other_user}",
        "gists_url": "https://api.github.com/users/davrous/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davrous/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davrous/subscriptions",
        "organizations_url": "https://api.github.com/users/davrous/orgs",
        "repos_url": "https://api.github.com/users/davrous/repos",
        "events_url": "https://api.github.com/users/davrous/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davrous/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2025-07-18T20:50:58Z",
      "updated_at": "2025-07-18T20:50:58Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "sub_issues_summary": {
        "total": 0,
        "completed": 0,
        "percent_completed": 0
      },
      "body": "- [ ] Make sure you've installed the latest version using [instructions](https://github.com/Azure/azure-dev?tab=readme-ov-file#installupgrade-azure-developer-cli)\n\n**Output from `azd version`**\nazd version 1.18.0 (commit 2c3bc5a3f885fed2e009195f466503f2fe2c22a1)\n\n**Describe the bug**\nI wanted to do a fun experiment where I would create a simple space invaders game in HTML5, in vibe coding with GHC + Claude Sonnet 4, and then use Azure MCP servers to deploy it to Azure.\n\nI tried 3 times and every time, the game was perfectly created but the deployment, using SWA as recommendation from AI, failed. It was able to create the Azure RG and create the SWA inside it but every time, the SWA was empty. The agentic DevEx wasn\u2019t able to package the local static files to deploy them to Azure for whatever reason.\n\nGH Copilot tried sometimes to fall back to the SWA CLI but failed also. \n\nAt the end, Copilot shared the link to the public web app but it only display the default page of an empty static web app.\n\n**To Reproduce**\n\u2022\tInside GH Copilot, with Agent mode and Claude Sonnet 4\n\u2022\tFirst prompt \"create a space invaders game using HTML5\"\n\u2022\tSecond part: \"can you please deploy the web app to Azure?\"\n\u2022\tGHC uses our MCP server to create the yaml, bicep files and uses azd up to deploy a SWA to Azure.\n\n**Expected behavior**\nThe static web files should be deployed as expected\n\n**Environment**\nInformation on your environment:\n-\tVS Code stable release v1.102.1 \n-\tGitHub Copilot pre-release 1.345.1685\n-\tGitHub Copilot for Azure 1.0.42\n-\tAzure Tools 1.6.0\n-\tAI Toolkit pre-release\n-\tAzure AI Foundry release 0.7.0\n-\tAzure App Service preview 0.26.3\n-\tAzure CLI Tools 0.6.0\n-\tEtc (complete list below)\n\necmel.vscode-html-css\ngithub.copilot\ngithub.copilot-chat\nms-azure-load-testing.microsoft-testing\nms-azuretools.azure-dev\nms-azuretools.vscode-azure-github-copilot\nms-azuretools.vscode-azureappservice\nms-azuretools.vscode-azurecontainerapps\nms-azuretools.vscode-azurefunctions\nms-azuretools.vscode-azureresourcegroups\nms-azuretools.vscode-azurestaticwebapps\nms-azuretools.vscode-azurestorage\nms-azuretools.vscode-azurevirtualmachines\nms-azuretools.vscode-bicep\nms-azuretools.vscode-containers\nms-azuretools.vscode-cosmosdb\nms-dotnettools.csdevkit\nms-dotnettools.csharp\nms-dotnettools.vscode-dotnet-runtime\nms-python.debugpy\nms-python.python\nms-python.vscode-pylance\nms-toolsai.jupyter\nms-toolsai.jupyter-keymap\nms-toolsai.jupyter-renderers\nms-toolsai.vscode-jupyter-cell-tags\nms-toolsai.vscode-jupyter-slideshow\nms-vscode-remote.remote-containers\nms-vscode.azurecli\nms-vscode.powershell\nms-vscode.vscode-node-azure-pack\nms-windows-ai-studio.windows-ai-studio\nmsazurermtools.azurerm-vscode-tools\nredhat.vscode-yaml\nteamsdevapp.ms-teams-vscode-extension\nteamsdevapp.vscode-ai-foundry\nundefined_publisher.aitk-langmodeltool\n\n\n**Additional context**\nWhen running \"**azd deploy --debug**\" I can see that an error is making an exit behavior. Then azd tries multiples times to run the deploy and ended up failing with:\n\n2025/07/18 22:36:13 main.go:50: Retry: response 200\n**2025/07/18 22:36:13 main.go:50: Retry: exit due to non-retriable status code**\n  (x) Failed: Deploying service space-invaders-game\n\nERROR: failed deploying service 'space-invaders-game': failed verifying static web app deployment. Still in Uploading state    \n\n\n",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5506/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5506/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    },
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5505",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5505/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5505/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5505/events",
      "html_url": "https://github.com/Azure/azure-dev/issues/5505",
      "id": 3243913168,
      "node_id": "I_kwDOHnONX87BWi_Q",
      "number": 5505,
      "title": "docs: overriding resource group at azd service level",
      "user": {
        "login": "JeffreyCA",
        "id": 9157833,
        "node_id": "MDQ6VXNlcjkxNTc4MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9157833?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeffreyCA",
        "html_url": "https://github.com/JeffreyCA",
        "followers_url": "https://api.github.com/users/JeffreyCA/followers",
        "following_url": "https://api.github.com/users/JeffreyCA/following{/other_user}",
        "gists_url": "https://api.github.com/users/JeffreyCA/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JeffreyCA/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JeffreyCA/subscriptions",
        "organizations_url": "https://api.github.com/users/JeffreyCA/orgs",
        "repos_url": "https://api.github.com/users/JeffreyCA/repos",
        "events_url": "https://api.github.com/users/JeffreyCA/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JeffreyCA/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [
        {
          "id": 4300059742,
          "node_id": "LA_kwDOHnONX88AAAABAE20Xg",
          "url": "https://api.github.com/repos/Azure/azure-dev/labels/documentation",
          "name": "documentation",
          "color": "0075ca",
          "default": true,
          "description": "Improvements or additions to documentation"
        },
        {
          "id": 5702478199,
          "node_id": "LA_kwDOHnONX88AAAABU-Tpdw",
          "url": "https://api.github.com/repos/Azure/azure-dev/labels/doc%20impact",
          "name": "doc impact",
          "color": "1C3382",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "alexwolfmsft",
        "id": 93200798,
        "node_id": "U_kgDOBY4hng",
        "avatar_url": "https://avatars.githubusercontent.com/u/93200798?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexwolfmsft",
        "html_url": "https://github.com/alexwolfmsft",
        "followers_url": "https://api.github.com/users/alexwolfmsft/followers",
        "following_url": "https://api.github.com/users/alexwolfmsft/following{/other_user}",
        "gists_url": "https://api.github.com/users/alexwolfmsft/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alexwolfmsft/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alexwolfmsft/subscriptions",
        "organizations_url": "https://api.github.com/users/alexwolfmsft/orgs",
        "repos_url": "https://api.github.com/users/alexwolfmsft/repos",
        "events_url": "https://api.github.com/users/alexwolfmsft/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alexwolfmsft/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "alexwolfmsft",
          "id": 93200798,
          "node_id": "U_kgDOBY4hng",
          "avatar_url": "https://avatars.githubusercontent.com/u/93200798?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/alexwolfmsft",
          "html_url": "https://github.com/alexwolfmsft",
          "followers_url": "https://api.github.com/users/alexwolfmsft/followers",
          "following_url": "https://api.github.com/users/alexwolfmsft/following{/other_user}",
          "gists_url": "https://api.github.com/users/alexwolfmsft/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/alexwolfmsft/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/alexwolfmsft/subscriptions",
          "organizations_url": "https://api.github.com/users/alexwolfmsft/orgs",
          "repos_url": "https://api.github.com/users/alexwolfmsft/repos",
          "events_url": "https://api.github.com/users/alexwolfmsft/events{/privacy}",
          "received_events_url": "https://api.github.com/users/alexwolfmsft/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2025-07-18T17:40:20Z",
      "updated_at": "2025-07-18T17:40:45Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": {
        "id": 672273,
        "node_id": "IT_kwDOAGhwUs4ACkIR",
        "name": "Task",
        "description": "A specific piece of work",
        "color": "yellow",
        "created_at": "2024-01-25T10:21:54Z",
        "updated_at": "2024-07-26T10:13:37Z",
        "is_enabled": true
      },
      "active_lock_reason": null,
      "sub_issues_summary": {
        "total": 0,
        "completed": 0,
        "percent_completed": 0
      },
      "body": "A while back we added support for overriding the resource group at the service level in **azure.yaml**: #3744:\n\n```yaml\nservices:\n  app-primary:\n    resourceGroup: rg-custom\n```\n\nThis allows users to:\n\n1. Deploy to service hosts outside the default azd resource group, or\n2. Map each service to a different resource group if desired\n\nThe value of `resourceGroup` can be a constant string like `rg-primary`, or more powerfully, supports environment substitution expressions, so in your **azure.yaml** one could have:\n\n```yaml\nservices:\n  app-primary:\n    resourceGroup: ${PRIMARY_RESOURCE_GROUP_NAME}\n  app-secondary:\n    resourceGroup: ${SECONDARY_RESOURCE_GROUP_NAME}\n```\n\nand in the **main.bicep** something like:\n\n```bicep\n...\n\nvar primaryResourceGroupName string = 'rg-${environmentName}-primary'\nvar secondaryResourceGroupName string = 'rg-${environmentName}-secondary'\n\n...\noutput PRIMARY_RESOURCE_GROUP_NAME string = primaryResourceGroup.name\noutput SECONDARY_RESOURCE_GROUP_NAME string = secondaryResourceGroup.name\n```\n\nThis was never documented in our public documentation. Not sure if this deserves its own page, but we should probably update https://learn.microsoft.com/azure/developer/azure-developer-cli/azd-schema to mention the `resourceGroup` property.\n\ncc: @alexwolfmsft ",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5505/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5505/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    },
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5503",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5503/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5503/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5503/events",
      "html_url": "https://github.com/Azure/azure-dev/pull/5503",
      "id": 3240912467,
      "node_id": "PR_kwDOHnONX86fc5ZM",
      "number": 5503,
      "title": "Increment CLI version after release",
      "user": {
        "login": "azure-sdk",
        "id": 53356347,
        "node_id": "MDQ6VXNlcjUzMzU2MzQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/53356347?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/azure-sdk",
        "html_url": "https://github.com/azure-sdk",
        "followers_url": "https://api.github.com/users/azure-sdk/followers",
        "following_url": "https://api.github.com/users/azure-sdk/following{/other_user}",
        "gists_url": "https://api.github.com/users/azure-sdk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/azure-sdk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/azure-sdk/subscriptions",
        "organizations_url": "https://api.github.com/users/azure-sdk/orgs",
        "repos_url": "https://api.github.com/users/azure-sdk/repos",
        "events_url": "https://api.github.com/users/azure-sdk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/azure-sdk/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "azure-sdk",
        "id": 53356347,
        "node_id": "MDQ6VXNlcjUzMzU2MzQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/53356347?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/azure-sdk",
        "html_url": "https://github.com/azure-sdk",
        "followers_url": "https://api.github.com/users/azure-sdk/followers",
        "following_url": "https://api.github.com/users/azure-sdk/following{/other_user}",
        "gists_url": "https://api.github.com/users/azure-sdk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/azure-sdk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/azure-sdk/subscriptions",
        "organizations_url": "https://api.github.com/users/azure-sdk/orgs",
        "repos_url": "https://api.github.com/users/azure-sdk/repos",
        "events_url": "https://api.github.com/users/azure-sdk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/azure-sdk/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "azure-sdk",
          "id": 53356347,
          "node_id": "MDQ6VXNlcjUzMzU2MzQ3",
          "avatar_url": "https://avatars.githubusercontent.com/u/53356347?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/azure-sdk",
          "html_url": "https://github.com/azure-sdk",
          "followers_url": "https://api.github.com/users/azure-sdk/followers",
          "following_url": "https://api.github.com/users/azure-sdk/following{/other_user}",
          "gists_url": "https://api.github.com/users/azure-sdk/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/azure-sdk/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/azure-sdk/subscriptions",
          "organizations_url": "https://api.github.com/users/azure-sdk/orgs",
          "repos_url": "https://api.github.com/users/azure-sdk/repos",
          "events_url": "https://api.github.com/users/azure-sdk/events{/privacy}",
          "received_events_url": "https://api.github.com/users/azure-sdk/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2025-07-17T21:05:38Z",
      "updated_at": "2025-07-17T22:35:39Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/Azure/azure-dev/pulls/5503",
        "html_url": "https://github.com/Azure/azure-dev/pull/5503",
        "diff_url": "https://github.com/Azure/azure-dev/pull/5503.diff",
        "patch_url": "https://github.com/Azure/azure-dev/pull/5503.patch",
        "merged_at": null
      },
      "body": "Increment CLI version after release",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5503/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5503/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    },
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5502",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5502/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5502/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5502/events",
      "html_url": "https://github.com/Azure/azure-dev/issues/5502",
      "id": 3240774442,
      "node_id": "I_kwDOHnONX87BKksq",
      "number": 5502,
      "title": "Command runner logging enhancements with `--debug`",
      "user": {
        "login": "JeffreyCA",
        "id": 9157833,
        "node_id": "MDQ6VXNlcjkxNTc4MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9157833?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeffreyCA",
        "html_url": "https://github.com/JeffreyCA",
        "followers_url": "https://api.github.com/users/JeffreyCA/followers",
        "following_url": "https://api.github.com/users/JeffreyCA/following{/other_user}",
        "gists_url": "https://api.github.com/users/JeffreyCA/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JeffreyCA/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JeffreyCA/subscriptions",
        "organizations_url": "https://api.github.com/users/JeffreyCA/orgs",
        "repos_url": "https://api.github.com/users/JeffreyCA/repos",
        "events_url": "https://api.github.com/users/JeffreyCA/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JeffreyCA/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [
        {
          "id": 4300059745,
          "node_id": "LA_kwDOHnONX88AAAABAE20YQ",
          "url": "https://api.github.com/repos/Azure/azure-dev/labels/enhancement",
          "name": "enhancement",
          "color": "a2eeef",
          "default": true,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2025-07-17T20:08:38Z",
      "updated_at": "2025-07-17T23:07:27Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": {
        "id": 672276,
        "node_id": "IT_kwDOAGhwUs4ACkIU",
        "name": "Feature",
        "description": "A request, idea, or new functionality",
        "color": "blue",
        "created_at": "2024-01-25T10:21:54Z",
        "updated_at": "2024-10-08T08:53:08Z",
        "is_enabled": true
      },
      "active_lock_reason": null,
      "sub_issues_summary": {
        "total": 0,
        "completed": 0,
        "percent_completed": 0
      },
      "body": "One current limitation of the command runner implementation is that when running azd with `--debug`, if the command being executed takes a very long time or appears to be stuck, neither the command or output gets logged until the process exits.\n\n-----------------------------\n\n_Originally posted by @weikanglim in https://github.com/Azure/azure-dev/issues/5501#issuecomment-3085257044_:\n\nRight now our command runner only logs the full output of the command after execution:\n\n> 2025/07/17 19:22:52 command_runner.go:310: Run exec: 'git --version' , exit code: 0\n-------------------------------------stdout-------------------------------------------\ngit version 2.45.3\n\nA possible enhancement is to split this out into two messages:\n\n> 2025/07/17 19:22:52 command_runner.go:310: Start: 'git --version'\n> 2025/07/17 19:22:52 command_runner.go:310: Stop: 'git --version' , exit code: 0\n-------------------------------------stdout-------------------------------------------\ngit version 2.45.3\n\n-----------------------------\n\nA further enhancement could be to support streaming the command output in real-time, which would make it easier to observe and debug cases like #5491, where the command being executed initiated a long-running process:\n\n```\ninfo: Microsoft.Hosting.Lifetime[14]\n      Now listening on: http://localhost:5241\ninfo: Microsoft.Hosting.Lifetime[0]\n      Application started. Press Ctrl+C to shut down.\ninfo: Microsoft.Hosting.Lifetime[0]\n      Hosting environment: Development\ninfo: Microsoft.Hosting.Lifetime[0]\n      Content root path: /workspaces/junk_20250716/Something\n```",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5502/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5502/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    },
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5500",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5500/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5500/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5500/events",
      "html_url": "https://github.com/Azure/azure-dev/issues/5500",
      "id": 3238052886,
      "node_id": "I_kwDOHnONX87BAMQW",
      "number": 5500,
      "title": "Validate AZURE_EXISTING_AGENT_ID",
      "user": {
        "login": "howieleung",
        "id": 177042912,
        "node_id": "U_kgDOCo114A",
        "avatar_url": "https://avatars.githubusercontent.com/u/177042912?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/howieleung",
        "html_url": "https://github.com/howieleung",
        "followers_url": "https://api.github.com/users/howieleung/followers",
        "following_url": "https://api.github.com/users/howieleung/following{/other_user}",
        "gists_url": "https://api.github.com/users/howieleung/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/howieleung/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/howieleung/subscriptions",
        "organizations_url": "https://api.github.com/users/howieleung/orgs",
        "repos_url": "https://api.github.com/users/howieleung/repos",
        "events_url": "https://api.github.com/users/howieleung/events{/privacy}",
        "received_events_url": "https://api.github.com/users/howieleung/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2025-07-17T04:16:58Z",
      "updated_at": "2025-07-17T04:16:58Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": {
        "id": 672276,
        "node_id": "IT_kwDOAGhwUs4ACkIU",
        "name": "Feature",
        "description": "A request, idea, or new functionality",
        "color": "blue",
        "created_at": "2024-01-25T10:21:54Z",
        "updated_at": "2024-10-08T08:53:08Z",
        "is_enabled": true
      },
      "active_lock_reason": null,
      "sub_issues_summary": {
        "total": 0,
        "completed": 0,
        "percent_completed": 0
      },
      "body": "In our use case, Validate AZURE_EXISTING_AGENT_ID might be provided as an azd environment variable.   I need to verify if the agent ID and abort if it is invalid.\n\nCurrently we can't write hook since ps1 or sh script needs to make REST API calls but curl or apt-get might not be available.",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5500/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5500/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    },
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5499",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5499/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5499/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5499/events",
      "html_url": "https://github.com/Azure/azure-dev/issues/5499",
      "id": 3238030474,
      "node_id": "I_kwDOHnONX87BAGyK",
      "number": 5499,
      "title": "Some message output by azure cli needed to be configurable",
      "user": {
        "login": "howieleung",
        "id": 177042912,
        "node_id": "U_kgDOCo114A",
        "avatar_url": "https://avatars.githubusercontent.com/u/177042912?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/howieleung",
        "html_url": "https://github.com/howieleung",
        "followers_url": "https://api.github.com/users/howieleung/followers",
        "following_url": "https://api.github.com/users/howieleung/following{/other_user}",
        "gists_url": "https://api.github.com/users/howieleung/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/howieleung/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/howieleung/subscriptions",
        "organizations_url": "https://api.github.com/users/howieleung/orgs",
        "repos_url": "https://api.github.com/users/howieleung/repos",
        "events_url": "https://api.github.com/users/howieleung/events{/privacy}",
        "received_events_url": "https://api.github.com/users/howieleung/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2025-07-17T04:04:47Z",
      "updated_at": "2025-07-17T04:04:47Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": {
        "id": 672276,
        "node_id": "IT_kwDOAGhwUs4ACkIU",
        "name": "Feature",
        "description": "A request, idea, or new functionality",
        "color": "blue",
        "created_at": "2024-01-25T10:21:54Z",
        "updated_at": "2024-10-08T08:53:08Z",
        "is_enabled": true
      },
      "active_lock_reason": null,
      "sub_issues_summary": {
        "total": 0,
        "completed": 0,
        "percent_completed": 0
      },
      "body": "Currently during deployment by azd deploy, it shows \n\n```\nDeploying <service_name> \n```\n\n```\nPackaging service <service_name>. \n```\nThe service_name must be one word specified in azure.yaml.   In my case, the name I use is `api_and_frontend` which is weird.  It would be great if I can customize the whole sentence.  Alternatively, consider support spacing on the name.  ",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5499/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5499/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    },
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5498",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5498/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5498/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5498/events",
      "html_url": "https://github.com/Azure/azure-dev/issues/5498",
      "id": 3238010290,
      "node_id": "I_kwDOHnONX87BAB2y",
      "number": 5498,
      "title": "User-Friendly Output from azd up",
      "user": {
        "login": "howieleung",
        "id": 177042912,
        "node_id": "U_kgDOCo114A",
        "avatar_url": "https://avatars.githubusercontent.com/u/177042912?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/howieleung",
        "html_url": "https://github.com/howieleung",
        "followers_url": "https://api.github.com/users/howieleung/followers",
        "following_url": "https://api.github.com/users/howieleung/following{/other_user}",
        "gists_url": "https://api.github.com/users/howieleung/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/howieleung/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/howieleung/subscriptions",
        "organizations_url": "https://api.github.com/users/howieleung/orgs",
        "repos_url": "https://api.github.com/users/howieleung/repos",
        "events_url": "https://api.github.com/users/howieleung/events{/privacy}",
        "received_events_url": "https://api.github.com/users/howieleung/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2025-07-17T03:56:27Z",
      "updated_at": "2025-07-17T03:56:27Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": {
        "id": 672276,
        "node_id": "IT_kwDOAGhwUs4ACkIU",
        "name": "Feature",
        "description": "A request, idea, or new functionality",
        "color": "blue",
        "created_at": "2024-01-25T10:21:54Z",
        "updated_at": "2024-10-08T08:53:08Z",
        "is_enabled": true
      },
      "active_lock_reason": null,
      "sub_issues_summary": {
        "total": 0,
        "completed": 0,
        "percent_completed": 0
      },
      "body": "According to user studies, we need to inform whether the agents is being creating, created, success or fail.   Our plan is create agents through an init container app.  With that said, we want to be able to stream the progress from the python code from the server side all the way to the client terminal.",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5498/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5498/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    },
    {
      "url": "https://api.github.com/repos/Azure/azure-dev/issues/5497",
      "repository_url": "https://api.github.com/repos/Azure/azure-dev",
      "labels_url": "https://api.github.com/repos/Azure/azure-dev/issues/5497/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/azure-dev/issues/5497/comments",
      "events_url": "https://api.github.com/repos/Azure/azure-dev/issues/5497/events",
      "html_url": "https://github.com/Azure/azure-dev/issues/5497",
      "id": 3238001302,
      "node_id": "I_kwDOHnONX87A__qW",
      "number": 5497,
      "title": "Model and Quota Check with Env Variables",
      "user": {
        "login": "howieleung",
        "id": 177042912,
        "node_id": "U_kgDOCo114A",
        "avatar_url": "https://avatars.githubusercontent.com/u/177042912?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/howieleung",
        "html_url": "https://github.com/howieleung",
        "followers_url": "https://api.github.com/users/howieleung/followers",
        "following_url": "https://api.github.com/users/howieleung/following{/other_user}",
        "gists_url": "https://api.github.com/users/howieleung/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/howieleung/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/howieleung/subscriptions",
        "organizations_url": "https://api.github.com/users/howieleung/orgs",
        "repos_url": "https://api.github.com/users/howieleung/repos",
        "events_url": "https://api.github.com/users/howieleung/events{/privacy}",
        "received_events_url": "https://api.github.com/users/howieleung/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2025-07-17T03:52:06Z",
      "updated_at": "2025-07-17T03:52:06Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": {
        "id": 672276,
        "node_id": "IT_kwDOAGhwUs4ACkIU",
        "name": "Feature",
        "description": "A request, idea, or new functionality",
        "color": "blue",
        "created_at": "2024-01-25T10:21:54Z",
        "updated_at": "2024-10-08T08:53:08Z",
        "is_enabled": true
      },
      "active_lock_reason": null,
      "sub_issues_summary": {
        "total": 0,
        "completed": 0,
        "percent_completed": 0
      },
      "body": "\n\nOur requirements: \no\tValidate quota for agent models using name, format, and version from azd environment variables. \no\tValidate if the names from azd env variables are correct. \no\tIn our case, embedded models are used only when AI Search is configured via azd, so I need quota check for this model to be optional. \n\nCurrently the quota check supported azd environment variables, so I raise this feature request.",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/Azure/azure-dev/issues/5497/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/azure-dev/issues/5497/timeline",
      "performed_via_github_app": null,
      "state_reason": null
    }
  ],
  "analysis_timestamp": "2025-07-21",
  "total_open_issues": 839
}